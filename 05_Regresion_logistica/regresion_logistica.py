# -*- coding: utf-8 -*-
"""Regresion_logistica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QBOzCrnCvs68T5j7e87LguxowYPU9XaH
"""

import pandas as pd
datos = pd.read_csv("train.csv")

datos.head()

datos.describe()

import seaborn as sb
sb.countplot(x="Survived", data=datos)



import seaborn as sb
sb.countplot(x="Survived", data=datos, hue="Sex")

datos.isna().sum()

sb.displot(x="Age", data=datos)

datos["Age"].mean()

datos["Age"] = datos["Age"].fillna(datos["Age"].mean())

datos["Age"]

datos.isna().sum()

datos = datos.drop(["Cabin"], axis=1)

datos["Embarked"].value_counts()

datos = datos.dropna()

datos.head()

datos = datos.drop(["Name", "PassengerId", "Ticket"], axis=1)

dummies_sex = pd.get_dummies(datos["Sex"], drop_first=True)

datos = datos.join(dummies_sex)
datos = datos.drop(["Sex"], axis=1)

datos.head()

sb.countplot(x="Survived", data = datos, hue="Embarked")

dummies_embarked = pd.get_dummies(datos["Embarked"], drop_first = True)

datos = datos.join(dummies_embarked)
datos = datos.drop(["Embarked"], axis=1)

datos.head()

sb.heatmap(datos.corr(), annot=True, cmap="YlGnBu")

sb.countplot(x="Survived", data=datos, hue="Pclass")

x = datos.drop(["Survived"], axis= 1)
y = datos["Survived"]

from sklearn.model_selection import train_test_split
x_ent, x_pru, y_ent, y_pru = train_test_split(x, y, test_size=.2)



from sklearn.linear_model import LogisticRegression
modelo = LogisticRegression(max_iter=1000)
modelo.fit(x_ent, y_ent)

predicciones = modelo.predict(x_pru)

from sklearn.metrics import accuracy_score
accuracy_score(y_pru, predicciones)

from sklearn.metrics import classification_report
print(classification_report(y_pru, predicciones))

from sklearn.metrics import confusion_matrix

confusion_matrix(y_pru, predicciones)

pd.DataFrame(confusion_matrix(y_pru, predicciones), columns=["Pred: No", "Pred: Si"], index= ["Real: No", "Real: Si"])

x.head()

yo = [3,80, 0, 0, 25, 0, 0, 1]

prediccion = modelo.predict([yo])
if prediccion[0] == 1:
  print("Sobrevivi locoo ")
else:
  print("NO sobrevivi, toy morida")